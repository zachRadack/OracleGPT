# Python slim base
FROM python:3.11-slim

# Prevents Python from writing .pyc files and buffering stdout
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Create a non-root user for a bit of safety
RUN useradd -m appuser

# System deps for selenium + chrome
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget gnupg unzip ca-certificates fonts-liberation libasound2 libatk-bridge2.0-0 libatk1.0-0 \
    libatspi2.0-0 libdrm2 libgbm1 libgtk-3-0 libnspr4 libnss3 libx11-6 libx11-xcb1 libxcb1 \
    libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 \
    libxss1 libxtst6 libu2f-udev libvulkan1 libexpat1 libegl1 \
    && rm -rf /var/lib/apt/lists/*

# Install Chrome (stable)
RUN wget -O /tmp/chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \
    && apt-get update && apt-get install -y --no-install-recommends /tmp/chrome.deb \
    && rm /tmp/chrome.deb \
    && rm -rf /var/lib/apt/lists/*

# Set display port to avoid crashes
ENV DISPLAY=:99 \
    CHROME_BIN=/usr/bin/google-chrome \
    MODEL=gpt-5

# Working dir
WORKDIR /app

# Copy requirements first for layer caching
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy source
COPY ExcelPath/OracleUpdates.py /app/OracleUpdates.py

# Ensure appuser owns /app so it can write output files (summary markdown, logs, etc.)
RUN chown -R appuser:appuser /app \
    && mkdir -p /data /output \
    && chown -R appuser:appuser /data /output

# Data directory (mount host Excel directory here); optional /output for results
VOLUME ["/data"]
VOLUME ["/output"]

USER appuser

# Default command prints help
CMD ["python", "OracleUpdates.py", "--help"]


openpyxl
pandas
beautifulsoup4
lxml
selenium
webdriver-manager
tenacity
openai>=1.0.0
tqdm
